{"version":3,"sources":["../../../src/core/pipes/validation.pipe.ts"],"sourcesContent":["\nimport { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToInstance } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform<any> {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToInstance(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n"],"names":["ValidationPipe","transform","value","metatype","toValidate","object","plainToInstance","errors","validate","length","BadRequestException","types","String","Boolean","Number","Array","Object","includes"],"mappings":";;;;+BAMaA;;;eAAAA;;;wBALoE;gCACxD;kCACO;;;;;;;AAGzB,IAAA,AAAMA,iBAAN,MAAMA;IACX,MAAMC,UAAUC,KAAU,EAAE,EAAEC,QAAQ,EAAoB,EAAE;QAC1D,IAAI,CAACA,YAAY,CAAC,IAAI,CAACC,UAAU,CAACD,WAAW;YAC3C,OAAOD;QACT;QACA,MAAMG,SAASC,IAAAA,iCAAe,EAACH,UAAUD;QACzC,MAAMK,SAAS,MAAMC,IAAAA,wBAAQ,EAACH;QAC9B,IAAIE,OAAOE,MAAM,GAAG,GAAG;YACrB,MAAM,IAAIC,2BAAmB,CAAC;QAChC;QACA,OAAOR;IACT;IAEQE,WAAWD,QAAkB,EAAW;QAC9C,MAAMQ,QAAoB;YAACC;YAAQC;YAASC;YAAQC;YAAOC;SAAO;QAClE,OAAO,CAACL,MAAMM,QAAQ,CAACd;IACzB;AACF"}