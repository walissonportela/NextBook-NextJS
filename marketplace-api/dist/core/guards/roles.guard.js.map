{"version":3,"sources":["../../../src/core/guards/roles.guard.ts"],"sourcesContent":["import { Injectable, CanActivate, ExecutionContext, ForbiddenException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { Roles } from '../decorators/roles.decorator';\nimport { Request } from 'express';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n\n  constructor(private reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    const roles = this.reflector.get(Roles, context.getHandler());\n\n    // Se não há roles definidos, permite acesso (endpoint público ou sem restrição de role)\n    if (!roles || roles.length === 0) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest<Request>();\n    const user = request.user;\n\n    // Se não há usuário autenticado, nega acesso\n    if (!user) {\n      throw new ForbiddenException('User not authenticated');\n    }\n\n    // Verifica se o usuário tem uma das roles necessárias\n    const hasRole = roles.includes(user.role);\n    \n    if (!hasRole) {\n      throw new ForbiddenException(`Access denied. Required roles: ${roles.join(', ')}`);\n    }\n\n    return true;\n  }\n}\n"],"names":["RolesGuard","canActivate","context","roles","reflector","get","Roles","getHandler","length","request","switchToHttp","getRequest","user","ForbiddenException","hasRole","includes","role","join"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPiE;sBACpD;gCAEJ;;;;;;;;;;AAIf,IAAA,AAAMA,aAAN,MAAMA;IAIXC,YACEC,OAAyB,EACyB;QAClD,MAAMC,QAAQ,IAAI,CAACC,SAAS,CAACC,GAAG,CAACC,qBAAK,EAAEJ,QAAQK,UAAU;QAE1D,wFAAwF;QACxF,IAAI,CAACJ,SAASA,MAAMK,MAAM,KAAK,GAAG;YAChC,OAAO;QACT;QAEA,MAAMC,UAAUP,QAAQQ,YAAY,GAAGC,UAAU;QACjD,MAAMC,OAAOH,QAAQG,IAAI;QAEzB,6CAA6C;QAC7C,IAAI,CAACA,MAAM;YACT,MAAM,IAAIC,0BAAkB,CAAC;QAC/B;QAEA,sDAAsD;QACtD,MAAMC,UAAUX,MAAMY,QAAQ,CAACH,KAAKI,IAAI;QAExC,IAAI,CAACF,SAAS;YACZ,MAAM,IAAID,0BAAkB,CAAC,CAAC,+BAA+B,EAAEV,MAAMc,IAAI,CAAC,OAAO;QACnF;QAEA,OAAO;IACT;IA5BA,YAAY,AAAQb,SAAoB,CAAE;aAAtBA,YAAAA;IAAuB;AA6B7C"}