{"version":3,"sources":["../../../../src/core/infra/config/env.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const envSchema = z.object({\n    NODE_ENV: z.enum(['development', 'production']).default('development'),\n    PORT: z.coerce.number().default(3333),\n    DATABASE_URL: z.string(),\n    JWT_SECRET: z.string().min(1),\n    BASE_URL: z.string().min(1)\n});\n\nexport type Env = z.infer<typeof envSchema>;\n\nexport function validateEnv(config: Record<string, unknown>): Env {\n    const parsed = envSchema.safeParse(config);\n\n    if (!parsed.success) {\n        throw new Error(`Invalid environment variables: ${parsed.error.message}`);\n    }\n\n    return parsed.data;\n}"],"names":["envSchema","validateEnv","z","object","NODE_ENV","enum","default","PORT","coerce","number","DATABASE_URL","string","JWT_SECRET","min","BASE_URL","config","parsed","safeParse","success","Error","error","message","data"],"mappings":";;;;;;;;;;;QAEaA;eAAAA;;QAUGC;eAAAA;;;qBAZE;AAEX,MAAMD,YAAYE,MAAC,CAACC,MAAM,CAAC;IAC9BC,UAAUF,MAAC,CAACG,IAAI,CAAC;QAAC;QAAe;KAAa,EAAEC,OAAO,CAAC;IACxDC,MAAML,MAAC,CAACM,MAAM,CAACC,MAAM,GAAGH,OAAO,CAAC;IAChCI,cAAcR,MAAC,CAACS,MAAM;IACtBC,YAAYV,MAAC,CAACS,MAAM,GAAGE,GAAG,CAAC;IAC3BC,UAAUZ,MAAC,CAACS,MAAM,GAAGE,GAAG,CAAC;AAC7B;AAIO,SAASZ,YAAYc,MAA+B;IACvD,MAAMC,SAAShB,UAAUiB,SAAS,CAACF;IAEnC,IAAI,CAACC,OAAOE,OAAO,EAAE;QACjB,MAAM,IAAIC,MAAM,CAAC,+BAA+B,EAAEH,OAAOI,KAAK,CAACC,OAAO,EAAE;IAC5E;IAEA,OAAOL,OAAOM,IAAI;AACtB"}