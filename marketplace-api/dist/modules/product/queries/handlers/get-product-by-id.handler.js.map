{"version":3,"sources":["../../../../../src/modules/product/queries/handlers/get-product-by-id.handler.ts"],"sourcesContent":["import { IQueryHandler, QueryHandler } from \"@nestjs/cqrs\";\nimport { GetProductByIdQuery } from \"../impl/get-product-by-id.query\";\nimport { PrismaService } from \"src/core/infra/database/prisma.service\";\nimport { NotFoundException } from \"@nestjs/common\";\nimport { FileService } from \"src/core/infra/multer/file.service\";\n\n@QueryHandler(GetProductByIdQuery)\nexport class GetProductByIdHandler implements IQueryHandler<GetProductByIdQuery> {\n    constructor(\n        private readonly prismaService: PrismaService, \n        private readonly fileService: FileService\n    ) {}\n\n    async execute(query: GetProductByIdQuery) {\n        const { id } = query.data;\n\n        const product = await this.prismaService.product.findUnique({\n            where: { id }\n        });\n\n        if (!product) {\n            throw new NotFoundException(`Product with ID ${id} not found`);\n        }\n\n        return {\n            ...product,\n            imageUrl: this.fileService.getFileUrl(product.imageUrl)\n        };\n    }\n}\n"],"names":["GetProductByIdHandler","execute","query","id","data","product","prismaService","findUnique","where","NotFoundException","imageUrl","fileService","getFileUrl"],"mappings":";;;;+BAOaA;;;eAAAA;;;sBAP+B;qCACR;+BACN;wBACI;6BACN;;;;;;;;;;AAGrB,IAAA,AAAMA,wBAAN,MAAMA;IAMT,MAAMC,QAAQC,KAA0B,EAAE;QACtC,MAAM,EAAEC,EAAE,EAAE,GAAGD,MAAME,IAAI;QAEzB,MAAMC,UAAU,MAAM,IAAI,CAACC,aAAa,CAACD,OAAO,CAACE,UAAU,CAAC;YACxDC,OAAO;gBAAEL;YAAG;QAChB;QAEA,IAAI,CAACE,SAAS;YACV,MAAM,IAAII,yBAAiB,CAAC,CAAC,gBAAgB,EAAEN,GAAG,UAAU,CAAC;QACjE;QAEA,OAAO;YACH,GAAGE,OAAO;YACVK,UAAU,IAAI,CAACC,WAAW,CAACC,UAAU,CAACP,QAAQK,QAAQ;QAC1D;IACJ;IApBA,YACI,AAAiBJ,aAA4B,EAC7C,AAAiBK,WAAwB,CAC3C;aAFmBL,gBAAAA;aACAK,cAAAA;IAClB;AAkBP"}