{"version":3,"sources":["../../../../../src/modules/product/queries/handlers/get-products.handler.ts"],"sourcesContent":["import { IQueryHandler, QueryHandler } from \"@nestjs/cqrs\";\nimport { GetProductsQuery } from \"../impl/get-products.query\";\nimport { PrismaService } from \"src/core/infra/database/prisma.service\";\nimport { FileService } from \"src/core/infra/multer/file.service\";\n\n@QueryHandler(GetProductsQuery)\nexport class GetProductsHandler implements IQueryHandler<GetProductsQuery> {\n    constructor(private readonly prismaService: PrismaService, private readonly fileService: FileService) {}\n    async execute(query: GetProductsQuery) {\n        const { page, limit, description, name, price } = query.data;\n        \n        const whereClause: any = {};\n        \n        let pageNumber = page ?? 1;\n        let limitNumber = limit ?? 50;\n        \n        if (name) {\n            whereClause.name = { contains: name, mode: 'insensitive' };\n        }\n        \n        if (description) {\n            whereClause.description = { contains: description, mode: 'insensitive' };\n        }\n        \n        if (price) {\n            whereClause.price = price;\n        }\n\n        const total = await this.prismaService.product.count({\n            where: whereClause\n        });\n\n        const products = await this.prismaService.product.findMany({\n            where: whereClause,\n            skip: (pageNumber - 1) * limitNumber,\n            take: Number(limitNumber),\n            orderBy: { createdAt: 'desc' }\n        });\n\n        return {\n            page: Number(pageNumber),\n            limit: Number(limitNumber),\n            total,\n            products: products.map(product => ({\n                ...product,\n                imageUrl: this.fileService.getFileUrl(product.imageUrl)\n            }))\n        }\n    }\n}"],"names":["GetProductsHandler","execute","query","page","limit","description","name","price","data","whereClause","pageNumber","limitNumber","contains","mode","total","prismaService","product","count","where","products","findMany","skip","take","Number","orderBy","createdAt","map","imageUrl","fileService","getFileUrl"],"mappings":";;;;+BAMaA;;;eAAAA;;;sBAN+B;kCACX;+BACH;6BACF;;;;;;;;;;AAGrB,IAAA,AAAMA,qBAAN,MAAMA;IAET,MAAMC,QAAQC,KAAuB,EAAE;QACnC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,WAAW,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAGL,MAAMM,IAAI;QAE5D,MAAMC,cAAmB,CAAC;QAE1B,IAAIC,aAAaP,QAAQ;QACzB,IAAIQ,cAAcP,SAAS;QAE3B,IAAIE,MAAM;YACNG,YAAYH,IAAI,GAAG;gBAAEM,UAAUN;gBAAMO,MAAM;YAAc;QAC7D;QAEA,IAAIR,aAAa;YACbI,YAAYJ,WAAW,GAAG;gBAAEO,UAAUP;gBAAaQ,MAAM;YAAc;QAC3E;QAEA,IAAIN,OAAO;YACPE,YAAYF,KAAK,GAAGA;QACxB;QAEA,MAAMO,QAAQ,MAAM,IAAI,CAACC,aAAa,CAACC,OAAO,CAACC,KAAK,CAAC;YACjDC,OAAOT;QACX;QAEA,MAAMU,WAAW,MAAM,IAAI,CAACJ,aAAa,CAACC,OAAO,CAACI,QAAQ,CAAC;YACvDF,OAAOT;YACPY,MAAM,AAACX,CAAAA,aAAa,CAAA,IAAKC;YACzBW,MAAMC,OAAOZ;YACba,SAAS;gBAAEC,WAAW;YAAO;QACjC;QAEA,OAAO;YACHtB,MAAMoB,OAAOb;YACbN,OAAOmB,OAAOZ;YACdG;YACAK,UAAUA,SAASO,GAAG,CAACV,CAAAA,UAAY,CAAA;oBAC/B,GAAGA,OAAO;oBACVW,UAAU,IAAI,CAACC,WAAW,CAACC,UAAU,CAACb,QAAQW,QAAQ;gBAC1D,CAAA;QACJ;IACJ;IAzCA,YAAY,AAAiBZ,aAA4B,EAAE,AAAiBa,WAAwB,CAAE;aAAzEb,gBAAAA;aAA+Ca,cAAAA;IAA2B;AA0C3G"}